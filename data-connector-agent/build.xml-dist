<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2007 Google Inc. 

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

NOTE: configure.sh edits the outputted build.xml make changes to build.xml-dist.
  
Build File for Secure Data Connector client and reference server.

  Interesting targets:
   -all: builds distros
   -compile: creates all the jars.
   -install: builds jars and runs setup.sh
-->

<project 
    name="secure-data-connector" 
    default="compile"
    basedir=".">

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="third-party/antcontrib/ant-contrib-1.0b2.jar"/>
    </classpath>
  </taskdef>

  <!-- PROPERTIES -->
  <property file="build.properties" />

  <!-- TARGETS -->
  <target name="timestamp">
    <tstamp>
      <format property="timestamp" pattern="MMddyyyyhhmm"/>
    </tstamp>
  </target>

  <target name="buildstamp">
    <tstamp>
      <format property="buildstamp" pattern="MM-dd-yyyy hh:mm"/>
    </tstamp>
  </target>

  <target name="init" depends="buildstamp, timestamp">    
    <mkdir dir="${build}" />
    <mkdir dir="${classes}" />
  </target>

  <target 
      name="clean" 
      description="Deletes all build files." >
    <delete dir="${build}" />
    <delete dir="${bin}" />
  </target>

  <target 
      name="dist-clean" 
      description="Deletes all files to pre configured state.">
    <delete file="build.xml"/>
    <delete file="build.properties"/>
    <delete file="config.status"/>
    <delete file="runclient.sh"/>
    <delete file="start.sh"/>
    <delete file="stop.sh"/>
    <delete file="install-sdc.sh"/>
    <delete file="config/localConfig.xml"/>
    <delete file="config/resourceRules.xml"/>
    <delete dir="${build}"/>
  </target>

  <!-- Protocol Buffer compiler steps -->
  <target name="protoc-all-protos">
    <foreach param="proto-to-compile" target="compile-proto">
      <path>
        <fileset dir="${src}">
          <include name="**/*.proto"/>
        </fileset>
      </path>
    </foreach>
  </target>

  <target name="compile-proto">
    <exec executable="${protoc}">
      <arg value="--java_out=${src-generated}"/>
      <arg value="--proto_path=${basedir}"/>
      <arg value="${proto-to-compile}"/>
    </exec>
  </target>

  <target name="compile" depends="init, protoc-all-protos" >

    <javac 
        srcdir="${src-generated}" 
        destdir="${classes}"
        debug="${COMPILE_DEBUG_FLAG}"
        debuglevel="${COMPILE_DEBUG_LEVEL}"
        includes="**"
        >
      <classpath>
        <pathelement path="third-party/protobuf/protobuf-java-2.1.0.jar"/>
      </classpath>
    </javac>

    <javac 
        srcdir="${src}" 
        destdir="${classes}"
        debug="${COMPILE_DEBUG_FLAG}"
        debuglevel="${COMPILE_DEBUG_LEVEL}"
        includes="**"
        >
      <classpath>
        <pathelement path="third-party/jsocks/jsocks.jar"/>
        <pathelement path="third-party/beepcore/lib/beepcore.jar"/>
        <pathelement path="third-party/beepcore/lib/xerces.jar"/>
        <pathelement path="third-party/beepcore/lib/concurrent.jar"/>
        <pathelement path="third-party/commons-cli/commons-cli-1.1.jar"/>
        <pathelement path="third-party/commons-logging/commons-logging-1.1.jar"/>
        <pathelement path="third-party/apache-log4j/log4j-1.2.15.jar"/>
        <pathelement path="third-party/easymock/easymock.jar"/>
        <pathelement path="third-party/easymock/easymockclassextension.jar"/>
        <pathelement path="third-party/guice-snapshot20081016/guice-assistedinject-snapshot20081016.jar"/>
        <pathelement path="third-party/guice-snapshot20081016/guice-snapshot20081016.jar"/>
        <pathelement path="third-party/google-feedserver/commons-beanutils-core-1.8.0.jar"/>
        <pathelement path="third-party/google-feedserver/gdata-client-1.0.jar"/>
        <pathelement path="third-party/google-feedserver/gdata-core-1.0.jar"/>
        <pathelement path="third-party/google-feedserver/google-feedserver-java-client-2.0.jar"/>
        <pathelement path="third-party/jsch/jsch-20071024.jar"/>
        <pathelement path="third-party/jline/jline-0.9.91.jar"/>
        <pathelement path="third-party/json/json.jar"/>
        <pathelement path="third-party/junit/junit-4.4.jar"/>
        <pathelement path="third-party/oauth/core.jar"/>
        <pathelement path="third-party/oauth/commons-codec-1.3.jar"/>
        <pathelement path="third-party/protobuf/protobuf-java-2.1.0.jar"/>
        <pathelement path="third-party/sdc-shared/shared.jar"/>
      </classpath>
    </javac>

    <!-- create agent jar -->
    <tstamp/>
    <jar jarfile="${agent.jarfile}">
      <fileset dir="${classes}">
        <include name="**"/>
        <exclude name="com/google/dataconnector/registration/**"/>
        <exclude name="com/google/dataconnector/protocol/**"/>
      </fileset>
      <manifest>
        <attribute name="Implementation-Title" value="Secure Data Connector"/>
        <attribute name="Implementation-Version" value="SDC ${version} Built: ${buildstamp}"/>
        <attribute name="Implementation-Vendor" value="Google"/>
        <attribute name="Main-Class"
              value="com.google.dataconnector.client.Client"/>
      </manifest>
    </jar>

    <jar jarfile="${registration.jarfile}">
      <fileset dir="${classes}" includes="com/google/dataconnector/registration/**"/>
      <manifest>
        <attribute name="Implementation-Title" value="Secure Data Connector Registration Utils"/>
        <attribute name="Implementation-Version" value="SDC ${version} Built: ${buildstamp}"/>
        <attribute name="Implementation-Vendor" value="Google"/>
      </manifest>
    </jar>

    <jar jarfile="${protocol.jarfile}">
      <fileset dir="${classes}" includes="com/google/dataconnector/protocol/**"/>
      <manifest>
        <attribute name="Implementation-Title" value="Secure Data Connector Protocol"/>
        <attribute name="Implementation-Version" value="SDC ${version} Built: ${buildstamp}"/>
        <attribute name="Implementation-Vendor" value="Google"/>
      </manifest>
    </jar>

    <!-- Source Jars -->
    <tstamp/>
    <jar jarfile="${agent-src.jarfile}">
      <fileset dir="${src}"> 
        <include name="com/google/dataconnector/**" />
      </fileset>
      <manifest>
        <attribute name="Implementation-Title" value="Secure Data Connector"/>
        <attribute name="Implementation-Version" value="SDC ${version} Built: ${buildstamp}"/>
        <attribute name="Implementation-Vendor" value="Google"/>
      </manifest>
    </jar>

    <tstamp/>
    <jar jarfile="${protocol-src.jarfile}">
      <fileset dir="${src}"> 
        <include name="com/google/dataconnector/protocol/**" />
      </fileset>
      <fileset dir="${src-generated}"> 
        <include name="com/google/dataconnector/protocol/**" />
      </fileset>
      <manifest>
        <attribute name="Implementation-Title" value="Secure Data Connector Protocol"/>
        <attribute name="Implementation-Version" value="SDC ${version} Built: ${buildstamp}"/>
        <attribute name="Implementation-Vendor" value="Google"/>
      </manifest>
    </jar>

    <tstamp/>
    <jar jarfile="${registration-src.jarfile}">
      <fileset dir="${src}"> 
        <include name="com/google/dataconnector/registration/**" />
      </fileset>
      <manifest>
        <attribute name="Implementation-Title" value="Secure Data Connector Registration Utils"/>
        <attribute name="Implementation-Version" value="SDC ${version} Built: ${buildstamp}"/>
        <attribute name="Implementation-Vendor" value="Google"/>
      </manifest>
    </jar>
  </target>

  <!-- install -->
  <target name="install" depends="compile">
    <exec executable="./install-sdc.sh" failonerror="true"/>
  </target>

  <target name="all" depends="test,compile,install"/>

  <!-- Start of Testing-related stuff -->
  <property name="testSrc.home"       value="src/javatests"/>
  <property name="testClasses.home"   value="${build}/testClasses/"/>
  <property name="testOutput.home"    value="${build}/testOutput"/>
  <property name="junit.jar"          location="third-party/junit/junit-4.4.jar"/>

  <path id="classpath.test">
    <pathelement location="${testClasses.home}" />
    <pathelement location="${agent.jarfile}" />
    <pathelement location="${protocol.jarfile}" />
    <pathelement location="${registration.jarfile}" />
    <fileset dir="third-party">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  
  <target name="test" depends="compile,cleanTests,compileTests">
      <mkdir dir="${testOutput.home}"/>
      <junit haltonfailure="yes" printsummary="yes">
        <classpath refid="classpath.test"/>
        <formatter type="plain" usefile="true" />
        <batchtest todir="${testOutput.home}">
          <fileset dir="${testSrc.home}">
            <include name="**/*Test.java"/>
          </fileset>
        </batchtest>
      </junit>
  </target>

  <target name="compileTests" depends="cleanTests" description="Compile Tests">
    <mkdir dir="${testClasses.home}"/>
    <javac 
        srcdir="${testSrc.home}"
        destdir="${testClasses.home}"
        classpathref="classpath.test"
        debug="true" 
        debuglevel="lines,vars,source">
    </javac>
  </target>

  <target 
      name="cleanTests"
      description="Delete old build and dist directories">
    <delete dir="${testClasses.home}"/>
    <delete dir="${testOutput.home}"/>
  </target>

  <!-- End of Testing-related stuff -->

</project>

