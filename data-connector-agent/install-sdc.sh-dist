#!/bin/bash
#
# Author: rayc@google.com (Ray Colline)
#
# Copyright 2008 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e  # bail out on any errors

# Install Properties
PREFIX=__PREFIX__
ETCPREFIX=__ETCPREFIX__
VARPREFIX=__VARPREFIX__
BINPREFIX=${PREFIX}/bin
LIBPREFIX=${PREFIX}/lib
SSH_CONF_DIR=${ETCPREFIX}/openssh
SSH_USER_DIR=${ETCPREFIX}/woodstock-user/.ssh
USER=__USER__
GROUP=__GROUP__
SSH_WOODSTOCK_USER=woodstock

TIMESTAMP=$(date +'%Y%m%d_%H%M%S')

# Check root.
if [ $(id -u) != 0 ]; then
  echo install must be run as user root.
  exit 1
fi

# Create directories
for dir in \
    "${PREFIX}" \
    "${LIBPREFIX}" \
    "${BINPREFIX}" \
    "${ETCPREFIX}" \
    "${VARPREFIX}" \
    "${VARPREFIX}/log" \
    "${SSH_CONF_DIR}" \
    "${SSH_USER_DIR}" ; do
  echo making dir ${dir}
  mkdir -p $dir
done

# binary
cp runclient.sh "${BINPREFIX}" 
chmod -R 755 ${BINPREFIX}

# lib
for jar in "agent.jar" "protocol.jar"; do
  echo installing ${jar} 
  install -m 644 build/${jar} ${LIBPREFIX}/${jar}
done

THIRD_PARTY_FILES=$(find third-party/ -type f | grep -v .svn)
for file in ${THIRD_PARTY_FILES}; do
  echo installing ${file}
  install -m 644 -D ${file} ${LIBPREFIX}/${file}
done


# backup old config files
if [ -e ${ETCPREFIX}/localConfig.xml ]; then
  echo backing up old localConfig.xml file
  install -g ${GROUP} -o root -m 640 ${ETCPREFIX}/localConfig.xml \
      ${ETCPREFIX}/localConfig.xml-existing-${TIMESTAMP}
fi

if [ -e ${ETCPREFIX}/resourceRules.xml ]; then
  echo backing up old resourceRules.xml file
  install -g ${GROUP} -o root -m 640 ${ETCPREFIX}/resourceRules.xml \
      ${ETCPREFIX}/resourceRules.xml-existing-${TIMESTAMP}
fi

# localConfig.xml
file="${ETCPREFIX}/localConfig.xml"
echo installing ${file}
install -g ${GROUP} -o root -m 640 ./config/localConfig.xml ${file}

# resourceRules.xml-dist
file="${ETCPREFIX}/resourceRules.xml"
echo installing ${file}
install -g ${GROUP} -o root -m 640 ./config/resourceRules.xml-dist ${file}

# log4j.properties
file="${ETCPREFIX}/log4j.properties"
echo installing ${file}
install -g ${GROUP} -o root -m 640 ./config/log4j.properties ${file}

### openssh  ###

# authorized_keys 
file="${SSH_USER_DIR}/authorized_keys"
echo installing ${file}
install -g ${GROUP} -o ${USER} -m 600 "config/openssh/authorized_keys" ${file}

# ssh host keys 
for file in "ssh_host_rsa_key" "ssh_host_dsa_key" "ssh_host_rsa_key.pub" \
    "ssh_host_dsa_key.pub"; do
  echo installing ${SSH_CONF_DIR}/${file}
  install -g ${GROUP} -o ${USER} -m 600 ./config/openssh/${file} \
      ${SSH_CONF_DIR}/${file}
done

# sshd_config
file="${SSH_CONF_DIR}/sshd_config"
echo installing ${file}
install -g ${GROUP} -o ${USER} -m 600 \
   "./config/openssh/sshd_config" ${file}

# start_sshd.sh 
file="${SSH_CONF_DIR}/start_sshd.sh"
echo installing ${file}
install -g ${GROUP} -o ${USER} -m 750 \
    "./config/openssh/start_sshd.sh" ${file}

# configure_sshdconf.sh 
file="${SSH_CONF_DIR}/configure_sshdconf.sh"
echo installing ${file}
install -g ${GROUP}  -m 750 \
    "./config/openssh/configure_sshdconf.sh" ${file}

echo "Running Post Install Scripts...."

${ETCPREFIX}/openssh/configure_sshdconf.sh 
