#!/bin/bash
#
# Copyright 2008 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Test and Configure Apache Modules
APACHE_20_MODULES="access proxy proxy_http mime mime_magic"
APACHE_22_MODULES="authz_host proxy proxy_http mime mime_magic"

ETCPREFIX="_ETCPREFIX_"
APACHECTL="_APACHE_CTL_"
MODULESDIR="_APACHE_MODULESDIR_"
TEMPLATE="/etc/opt/google-secure-data-connector/apache/httpd.conf-template"
FOUND_MODULES=""

 # Check version
echo -n "Checking apache version: " 
APACHEVERSION=$(${APACHECTL} -v 2>&1 | grep version | awk -F/ '{print $2}' | cut -c 1-3)

case ${APACHEVERSION} in 
  2.2 )
    echo ${APACHEVERSION} ;;
  2.0 )
    echo ${APACHEVERSION} ;;
  * )
    echo 
    echo !! ERROR !! 
    echo Apache version not correct or could not be determined - must be 2.0 or 2.2
    echo !! ERROR !! 
    echo 
    echo Try running ${ETCPREFIX}/apache/configure_apache.sh manually.
    echo 
    exit 0 ;;
esac

if [ -z ${APACHECTL} ]; then
  echo "--apachectl option is missing!"
  exit 1
fi

if [ ! -x "${APACHECTL}" ]; then
   echo "httpd: ${APACHECTL} not found"
   exit 1
fi

#
### Getting Apache Module list for config files.
#

if [ ${APACHEVERSION} = "2.2" ]; then
  APACHE_MODULES=${APACHE_22_MODULES}
else
  APACHE_MODULES=${APACHE_20_MODULES}
fi

#
# Checks MODULESDIR for both apache 2.0 and 2.2 style module names and
# echos the results (for use with eval).
#
# $1 module name.
# 
getPathToModuleFile ()
{
  module=$1
  if [ -e "${MODULESDIR}/mod_${module}.so" ]; then
    echo "${MODULESDIR}/mod_${module}.so"
    return 0 
 else 
    echo "Module not found"
    return 1
  fi

}

FOUND_MODULES=""
  for module in ${APACHE_MODULES}; do

    echo -n checking for statically compiled module: ${module}:
    ${APACHECTL} -l |grep -q ${module}
    if [ $? = 0 ]; then
      continue
    fi
    echo " no"

    echo -n checking dynamically compiled apache for: ${module}:
    modulepath=$(getPathToModuleFile ${module})
    if [ $? = 1 ]; then
      echo " no"
      echo "Please install module \"${module}\"."
      exit 1
    fi
    echo " yes"

    FOUND_MODULES="${FOUND_MODULES} ${module}"
  done



if [ ! -z "${FOUND_MODULES}" ]; 
then
  echo ${FOUND_MODULES}
  for module in ${FOUND_MODULES}; do  # Add modules to template
    echo Configuring load for ${module}
    moduledir=$(getPathToModuleFile ${module})
    echo "LoadModule ${module}_module ${moduledir}" >> ${TEMPLATE}
  done
fi



